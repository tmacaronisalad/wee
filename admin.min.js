// Enable Strict Mode for All code for future errors in Pragma

"use strict";

const settings = {
	attach: {
		download_url: '/cocohilot/attach/download',
		upload_url: '/cocohilot/attach/add',
		remove_url: '/cocohilot/attach/remove'
	},
	popup: {
		confirm_delete: { type:'warning', title:'Do you really delete this?', showCancelButton:true, confirmButtonColor:'#ff4f81' },
		warning_required: { type:'warning', title:'Please fill out all required fields.', confirmButtonColor:'#ff4f81' },
		success_request: {type:'success', title:'Your request is successfully done.', confirmButtonColor:'#ff4f81' },
		error_request: { type:'error', title:'Your request is invalid.', confirmButtonColor:'#ff4f81' },
		error_contact: { type:'error', title:'Please contact to admin.', confirmButtonColor:'#ff4f81' },
		error_email: { type:'error', title:'Email address is already registered.', confirmButtonColor:'#ff4f81' },
		error_invalid: { type:'error', title:'Input value is invalid.', confirmButtonColor:'#ff4f81' },
		error_upload_fail: { type:'error', title:'Fail to upload files.', confirmButtonColor:'#ff4f81' },
		error_upload_max: { type:'error', title:'Exceeded the number of uploads.', confirmButtonColor:'#ff4f81' },
		error_level: { type:'error', title:'No permission.', confirmButtonColor:'#ff4f81' }
	}
};
$.messageHandler = {
	getMessage: function(type) {
		return settings.popup[type];
	},
	showMessage: function(type) {
		swal(settings.popup[type]);
	},
	customMessage: function(type, msg) {
		swal({ type:type, title:msg });
	}
};
$.resultHandler = {
	showResult: function(data) {
		switch (data.ret) {
			case 5:
				$.messageHandler.customMessage('success', data.msg);
				break;
			case 4:
				history.back();
				break;
			case 3:
				location.reload();
				break;
			case 2:
				$(location).attr('href', data.url);
				break;
			case 1:
				$.messageHandler.showMessage('success_request');
				break;
			case -1:
				$.messageHandler.showMessage('error_contact');
				break;
			case -2:
				$.messageHandler.showMessage('error_email');
				break;
			case -3:
				$.messageHandler.showMessage('error_invalid');
				break;
			case -4:
				$.messageHandler.customMessage('error', data.msg);
				break;
			default:
				$.messageHandler.showMessage('error_request');
				break;
		}
	}
};
$.requestHandler = {
	checkRequirement: function(form) {
		var ret = true;
		$(form).find('input[required], select[required], textarea[required]').each(function() {
			if ($(this).val() == '') {
				$(this).focus();
				$(this).addClass('border-danger');
				$.messageHandler.showMessage('warning_required');
				return ret = false;
			}
			$(this).removeClass('border-danger');
		});
		return ret;
	}
};
$.uploadHandler = {
	remove: function(element, key, idx) {
		swal($.messageHandler.getMessage('confirm_delete'), function() {
			$.post(settings.attach.remove_url, {'form-key':key, 'form-idx':idx}, function(data) {
				if (data.ret == 1) {
					$(element).find('#'+idx+'.uploaded-file-wrapper').remove();
				}
				$.resultHandler.showResult(data);
			}, 'json');
		});
	},
	download: function(key, idx) {
		$(location).attr('href', settings.attach.download_url+'/'+key+'/'+idx);
	},
	upload: function(element, xfiles) {
		var form_max = ($(element).find('.uploader-loader').data('max') !== undefined) ? $(element).find('.uploader-loader').data('max') : 1;
		if (($(element).find('.uploader-files').children().length + xfiles.length) > form_max) {
			$(element).find('.uploader-loader').val('');
			$.messageHandler.showMessage('error_upload_max');
			return;
		}
		var form_action = ($(element).find('.uploader-loader').data('action') !== undefined) ? $(element).find('.uploader-loader').data('action') : '#';
		var form_key = ($(element).find('.uploader-loader').data('key') !== undefined) ? $(element).find('.uploader-loader').data('key') : '';
		var form_path = ($(element).find('.uploader-loader').data('path') !== undefined) ? $(element).find('.uploader-loader').data('path') : 'public';
		var form_category = ($(element).find('.uploader-loader').data('category') !== undefined) ? $(element).find('.uploader-loader').data('category') : 'file';
		var form_crop = ($(element).find('.uploader-loader').data('crop') !== undefined) ? $(element).find('.uploader-loader').data('crop') : true;
		var form_thumb = ($(element).find('.uploader-loader').data('thumb') !== undefined) ? $(element).find('.uploader-loader').data('thumb') : true;
		var form_resize = ($(element).find('.uploader-loader').data('resize') !== undefined) ? $(element).find('.uploader-loader').data('resize') : true;
		var form_type = ($(element).find('.uploader-loader').data('type') !== undefined) ? $(element).find('.uploader-loader').data('type') : 'none';
		var formData = new FormData();
		formData.append('form-key', form_key);
		formData.append('form-path', form_path);
		formData.append('form-category', form_category);
		formData.append('form-crop', form_crop);
		formData.append('form-thumb', form_thumb);
		formData.append('form-resize', form_resize);
		formData.append('form-type', form_type);
		for (var i = 0; i < xfiles.length; i++) {
			formData.append('form-file[]', xfiles[i]);
		}
		$.ajax({
			url: form_action,
			type: 'POST',
			data: formData,
			processData: false,
			contentType: false,
			xhr: function() {
				var xhr = new window.XMLHttpRequest();
				xhr.upload.addEventListener('progress', function(e){
					if (e.lengthComputable) { $(element).find('.uploader-message').text(((e.loaded/e.total)*100).toFixed(0)+'%'); }
				}, false);
				return xhr;
			},
			beforeSend: function(xhr) {
				$(element).find('.uploader-area').off('click');
				$(element).find('.uploader-area').css('cursor','auto');
				$(element).find('.uploader-icon i').removeClass('fa-cloud-upload').addClass('fa-spinner fa-spin');
			},
			complete: function(xhr) {
				$(element).find('.uploader-loader').val('');
				$(element).find('.uploader-area').on('click', function() { $(element).find('.uploader-loader').click(); });
				$(element).find('.uploader-area').css('cursor','pointer');
				$(element).find('.uploader-icon i').removeClass('fa-spinner fa-spin').addClass('fa-cloud-upload');
			},
			success: function(response, status, xhr) {
				var data = JSON.parse(response);
				if ((status == 'success') && (typeof data == 'object') && data.length != 0) {
					for (var j = 0; j < data.length; j++) {
						$.each(data[j], function(key, val) {
							$.uploadHandler.additem(element, val);
						});
					}
					$.messageHandler.showMessage('success_request');
				} else {
					$.messageHandler.showMessage('error_upload');
				}
			},
			error: function(jqXHR, textStatus, errorMessage) {
				$.messageHandler.showMessage('error_upload');
			}
		});
	},
	additem :function(element, item) {
		var file_key = ($(element).find('.uploader-loader').data('key') !== undefined) ? $(element).find('.uploader-loader').data('key') : '';
		var ele_wrapper = $('<div></div>').addClass('uploaded-file-wrapper col-md-4').attr('id', item.id);
		var ele_thumb = $('<span></span>').addClass('uploaded-file-thumb').append('<img src="/cocohilot/' + item.url + '" alt="file" />');
		var ele_title = $('<span></span>').addClass('uploaded-file-title').text((item.name.length < 20) ? item.name : (item.name.substring(0, 17)+'...'));
		var ele_detail = $('<span></span>').addClass('uploaded-file-detail');
		var ele_download = $('<span></span>').addClass('btn btn-secondary').append('<i class="fa fa-download"></i>').click(function() { $.uploadHandler.download(file_key, item.id); });
		var ele_delete = $('<span></span>').addClass('btn btn-secondary').append('<i class="fa fa-trash"></i>').click(function() { $.uploadHandler.remove(element, file_key, item.id); });
		$(ele_wrapper).append(ele_thumb);
		$(ele_wrapper).append(ele_title);
		$(ele_wrapper).append('<br /><br />');
		$(ele_detail).append(ele_download);
		$(ele_detail).append('&nbsp;');
		$(ele_detail).append(ele_delete);
		$(ele_wrapper).append(ele_detail);
		$(element).find('.uploader-files').append(ele_wrapper);
	}
};
$('.uploader-area').click(function() { $(this).siblings('.uploader-loader').click(); });
$('.uploader-loader').change(function(e) { $.uploadHandler.upload($(this).parent('.uploader-wrapper'), e.target.files); });

$.mapHandler = {
	_option: {
		_ret_lat: '',
		_ret_lng: '',
		_map: '',
		_marker: ''
	},
	init: function(opt) {
		var loc = null;

		this._option._ret_lat = opt.ret_lat;
		this._option._ret_lng = opt.ret_lng;
		this._option._map = new google.maps.Map(opt.ele, { panControl: true, streetViewControl: false, zoomControl: true, zoom: 12, mapTypeId: google.maps.MapTypeId.ROADMAP });

		var myIcon = new google.maps.MarkerImage('/assets/img/map-pin.png', new google.maps.Size(48, 48), new google.maps.Point(0, 0), new google.maps.Point(24, 48));
		var center = new google.maps.LatLng('10.320406748075236', '123.90318229794502');
		if (opt.lat && opt.lng) {
			center = new google.maps.LatLng(opt.lat, opt.lng);
			this._option._marker = new google.maps.Marker({ position: center, map: this._option._map, icon: myIcon });
			this._option._marker.setMap(this._option._map);
		}
		this._option._map.setCenter(center);
		if (opt.readonly === undefined) {
			google.maps.event.addListener(this._option._map, 'click', function(event) { $.mapHandler.setMarker(event.latLng); });
		}
	},
	setMarker: function(location) {
		this._option._ret_lat.val(location.lat());
		this._option._ret_lng.val(location.lng());

		var myIcon = new google.maps.MarkerImage('/assets/img/map-pin.png', new google.maps.Size(48, 48), new google.maps.Point(0, 0), new google.maps.Point(24, 48));

		if (this._option._marker != '') {
			this._option._marker.setMap(null);
		}
		this._option._marker = new google.maps.Marker({ position: location, map: this._option._map, icon: myIcon });
		this._option._marker.setMap(this._option._map);
	}
};

$.wysiwygHandler = {
	init: function(opt) {
		var _key = ((typeof opt === 'object') && (opt.key !== undefined)) ? opt.key : '';
		var _showCourse = ((typeof opt === 'object') && (opt.showSource !== undefined)) ? opt.showSource : false;
		var _path = ((typeof opt === 'object') && (opt.path !== undefined)) ? opt.path : 'public';

		$('.wysiwyg').redactor({
			lang: 'ko',
			markup: 'div',
			showSource: _showCourse,
			minHeight: '210px',
			plugins: ['fontfamily', 'fontcolor', 'fontsize', 'alignment', 'video'],
			imageUpload: settings.attach.upload_url,
			imageUploadParam: 'form-file',
			imageData: {
				'form-key': _key,
				'form-path': _path,
				'form-category': 'inline',
				'form-thumb': true
			},
			imageResizable: true,
			imagePosition: true,
			callbacks: {
				image: {
					delete: function(image) { $.post(settings.attach.remove_url, {'form-key':_key, 'form-idx':$(image.contents()).filter('img').data('image')}); },
					uploadError: function(response) { $.messageHandler.showMessage('error_upload'); }
				}
			}
		});
	}
};

$(document).ready(function () {
	$('input.numeric').keyup(function() {
		$(this).val($(this).val().replace(/[^\d]/g ,''));
	});
	$('.btn-submit').click(function(e) {
		e.preventDefault();

		if (!$.requestHandler.checkRequirement($(this).closest('form'))) return false;
		$.post($(this).closest('form').attr('action'), $(this).closest('form').serialize(), function(data) {
			$.resultHandler.showResult(data);
		}, 'json');

		return false;
	});

	$('.btn-delete').click(function(e) {
		e.preventDefault();

		var obj = $(this);
		swal({
			title: 'Are you sure you want to delete?',
			type: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#DD6B55'
		}, function() {
			$.post(obj.data('uri'), {'form-idx':obj.data('idx')}, function(data) {
				if (data.ret == 1) {
					history.back();
				} else {
					$.resultHandler.showResult(data);
				}
			}, 'json');
		});

		return false;
	});

	var set = function () {
		var width = (window.innerWidth > 0) ? window.innerWidth : this.screen.width;
		var topOffset = 55;
		if (width < 1170) {
			$("body").addClass("mini-sidebar");
			$('.navbar-brand span').hide();
			$(".sidebartoggler i").addClass("ti-menu");
		} else {
			$("body").removeClass("mini-sidebar");
			$('.navbar-brand span').show();
		}
		var height = ((window.innerHeight > 0) ? window.innerHeight : this.screen.height) - 1;
		height = height - topOffset;
		if (height < 1) height = 1;
		if (height > topOffset) {
			$(".page-wrapper").css("min-height", (height) + "px");
		}
	};
	$(window).ready(set);
	$(window).on("resize", set);

	$(".sidebartoggler").on('click', function () {
		if ($("body").hasClass("mini-sidebar")) {
			$("body").trigger("resize");
			$("body").removeClass("mini-sidebar");
			$('.navbar-brand span').show();
		} else {
			$("body").trigger("resize");
			$("body").addClass("mini-sidebar");
			$('.navbar-brand span').hide();
		}
	});
	$(".nav-toggler").click(function () {
		$("body").toggleClass("show-sidebar");
		$(".nav-toggler i").toggleClass("fa-bars");
		$(".nav-toggler i").addClass("fa-close");
	});
	$('#sidebarnav a.active').parents('ul').addClass('in').parents('li').addClass('active');

	if ($('#sidebarnav a.active').length > 0) {
		$('.scroll-sidebar, .right-side-panel, .message-center, .right-sidebar').perfectScrollbar();
		$('.scroll-sidebar').animate({scrollTop:($('#sidebarnav a.active').position().top-40)});
	}

	$('#sidebarnav a').on('click', function (e) {
		if (!$(this).hasClass("active")) {
			// hide any open menus and remove all other classes
			$("ul", $(this).parents("ul:first")).removeClass("in");
			$("a", $(this).parents("ul:first")).removeClass("active");

			// open our new menu and add the open class
			$(this).next("ul").addClass("in");
			$(this).addClass("active");
			
		} else if ($(this).hasClass("active")) {
			$(this).removeClass("active");
			$(this).parents("ul:first").removeClass("active");
			$(this).next("ul").removeClass("in");
		}
	})
	$('#sidebarnav >li >a.has-arrow').on('click', function (e) {
		e.preventDefault();
		return false;
	});
	$(function () { $('[data-toggle="tooltip"]').tooltip(); })
	$('body').trigger('resize');
});